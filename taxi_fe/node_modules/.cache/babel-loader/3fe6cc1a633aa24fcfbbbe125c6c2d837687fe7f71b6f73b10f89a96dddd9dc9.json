{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are multiplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"room:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n// ## Duplicate Join Subscriptions\n//\n// While the client may join any number of topics on any number of channels,\n// the client may only hold a single subscription for each unique topic at any\n// given time. When attempting to create a duplicate subscription,\n// the server will close the existing channel, log a warning, and\n// spawn a new channel for the topic. The client will have their\n// `channel.onClose` callbacks fired for the existing channel, and the new\n// channel join will have its receive hooks processed as normal.\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attempted\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n//\n// ## Presence\n//\n// The `Presence` object provides features for syncing presence information\n// from the server with the client and handling presences joining and leaving.\n//\n// ### Syncing initial state from the server\n//\n// `Presence.syncState` is used to sync the list of presences on the server\n// with the client's state. An optional `onJoin` and `onLeave` callback can\n// be provided to react to changes in the client's local presences across\n// disconnects and reconnects with the server.\n//\n// `Presence.syncDiff` is used to sync a diff of presence join and leave\n// events from the server, as they happen. Like `syncState`, `syncDiff`\n// accepts optional `onJoin` and `onLeave` callbacks to react to a user\n// joining or leaving from a device.\n//\n// ### Listing Presences\n//\n// `Presence.list` is used to return a list of presence information\n// based on the local state of metadata. By default, all presence\n// metadata is returned, but a `listBy` function can be supplied to\n// allow the client to select which metadata to use for a given presence.\n// For example, you may have a user online from different devices with a\n// a metadata status of \"online\", but they have set themselves to \"away\"\n// on another device. In this case, they app may choose to use the \"away\"\n// status for what appears on the UI. The example below defines a `listBy`\n// function which prioritizes the first metadata which was registered for\n// each user. This could be the first tab they opened, or the first device\n// they came online from:\n//\n//     let state = {}\n//     state = Presence.syncState(state, stateFromServer)\n//     let listBy = (id, {metas: [first, ...rest]}) => {\n//       first.count = rest.length + 1 // count of this user's presences\n//       first.id = id\n//       return first\n//     }\n//     let onlineUsers = Presence.list(state, listBy)\n//\n//\n// ### Example Usage\n//\n//     // detect if user has joined for the 1st time or from another tab/device\n//     let onJoin = (id, current, newPres) => {\n//       if(!current){\n//         console.log(\"user has entered for the first time\", newPres)\n//       } else {\n//         console.log(\"user additional presence\", newPres)\n//       }\n//     }\n//     // detect if user has left from all tabs/devices, or is still present\n//     let onLeave = (id, current, leftPres) => {\n//       if(current.metas.length === 0){\n//         console.log(\"user has left from all devices\", leftPres)\n//       } else {\n//         console.log(\"user left from a device\", leftPres)\n//       }\n//     }\n//     let presences = {} // client's initial empty presence state\n//     // receive initial presence data from server, sent after join\n//     myChannel.on(\"presences\", state => {\n//       presences = Presence.syncState(presences, state, onJoin, onLeave)\n//       displayUsers(Presence.list(presences))\n//     })\n//     // receive \"presence_diff\" from server, containing join/leave events\n//     myChannel.on(\"presence_diff\", diff => {\n//       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n//       this.setState({users: Presence.list(room.presences, listBy)})\n//     })\n//\nvar VSN = \"1.0.0\";\nvar SOCKET_STATES = {\n  connecting: 0,\n  open: 1,\n  closing: 2,\n  closed: 3\n};\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\nvar Push = function () {\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n      this.recHooks.push({\n        status: status,\n        callback: callback\n      });\n      return this;\n    }\n\n    // private\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status,\n        response = _ref.response,\n        ref = _ref.ref;\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n      if (this.timeoutTimer) {\n        return;\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, {\n        status: status,\n        response: response\n      });\n    }\n  }]);\n  return Push;\n}();\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n    _classCallCheck(this, Channel);\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic + \" \" + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic, _this2.joinPush.timeout);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({\n        event: event,\n        callback: callback\n      });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.timeout;\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n      return pushEvent;\n    }\n\n    // Leaves the channel\n    //\n    // Unsubscribes from server events, and\n    // instructs channel to terminate on server\n    //\n    // Triggers onClose() hooks\n    //\n    // To receive leave acknowledgements, use the a `receive`\n    // hook to bind to the server ack, ie:\n    //\n    //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n    //\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\", _this3.joinRef());\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n      return leavePush;\n    }\n\n    // Overridable message hook\n    //\n    // Receives all events for specialized message handling\n    // before dispatching to the channel callbacks.\n    //\n    // Must return the payload, modified or unmodified\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref) {\n      var close = CHANNEL_EVENTS.close,\n        error = CHANNEL_EVENTS.error,\n        leave = CHANNEL_EVENTS.leave,\n        join = CHANNEL_EVENTS.join;\n      if (ref && [close, error, leave, join].indexOf(event) >= 0 && ref !== this.joinRef()) {\n        return;\n      }\n      var handledPayload = this.onMessage(event, payload, ref);\n      if (payload && !handledPayload) {\n        throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n      }\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref);\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n  return Channel;\n}();\nvar Socket = exports.Socket = function () {\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n  function Socket(endPoint) {\n    var _this4 = this;\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Socket);\n    this.stateChangeCallbacks = {\n      open: [],\n      close: [],\n      error: [],\n      message: []\n    };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.reconnectTimer = new Timer(function () {\n      _this4.disconnect(function () {\n        return _this4.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), {\n        vsn: VSN\n      });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    // params - The params to send when connecting, for example `{user_id: userToken}`\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this5 = this;\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this5.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this5.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this5.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this5.onConnClose(event);\n      };\n    }\n\n    // Logs the message. Override `this.logger` for specialized logging. noops by default\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this6 = this;\n      this.log(\"transport\", \"connected to \" + this.endPointURL(), this.transport.prototype);\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this6.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this7 = this;\n      var topic = data.topic,\n        event = data.event,\n        payload = data.payload,\n        ref = data.ref;\n      var callback = function callback() {\n        return _this7.conn.send(JSON.stringify(data));\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    // Return the next message ref, accounting for overflows\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      this.push({\n        topic: \"phoenix\",\n        event: \"heartbeat\",\n        payload: {},\n        ref: this.makeRef()\n      });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var msg = JSON.parse(rawMessage.data);\n      var topic = msg.topic,\n        event = msg.event,\n        payload = msg.payload,\n        ref = msg.ref;\n      this.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n      this.channels.filter(function (channel) {\n        return channel.isMember(topic);\n      }).forEach(function (channel) {\n        return channel.trigger(event, payload, ref);\n      });\n      this.stateChangeCallbacks.message.forEach(function (callback) {\n        return callback(msg);\n      });\n    }\n  }]);\n  return Socket;\n}();\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n    this.poll();\n  }\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, {\n        token: this.token\n      });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this8 = this;\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status,\n            token = resp.token,\n            messages = resp.messages;\n          _this8.token = token;\n        } else {\n          var status = 0;\n        }\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this8.onmessage({\n                data: JSON.stringify(msg)\n              });\n            });\n            _this8.poll();\n            break;\n          case 204:\n            _this8.poll();\n            break;\n          case 410:\n            _this8.readyState = SOCKET_STATES.open;\n            _this8.onopen();\n            _this8.poll();\n            break;\n          case 0:\n          case 500:\n            _this8.onerror();\n            _this8.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this9 = this;\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this9.onerror(status);\n          _this9.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n  return LongPoll;\n}();\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var _req = window.XMLHttpRequest ? new XMLHttpRequest() :\n        // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(_req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this10 = this;\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this10.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this11 = this;\n      req.timeout = timeout;\n      req.open(method, endPoint, true);\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this11.states.complete && callback) {\n          var response = _this11.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      return resp && resp !== \"\" ? JSON.parse(resp) : null;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n  return Ajax;\n}();\nAjax.states = {\n  complete: 4\n};\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this12 = this;\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        var newRefs = newPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var curRefs = currentPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var joinedMetas = newPresence.metas.filter(function (m) {\n          return curRefs.indexOf(m.phx_ref) < 0;\n        });\n        var leftMetas = currentPresence.metas.filter(function (m) {\n          return newRefs.indexOf(m.phx_ref) < 0;\n        });\n        if (joinedMetas.length > 0) {\n          joins[key] = newPresence;\n          joins[key].metas = joinedMetas;\n        }\n        if (leftMetas.length > 0) {\n          leaves[key] = _this12.clone(currentPresence);\n          leaves[key].metas = leftMetas;\n        }\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, {\n      joins: joins,\n      leaves: leaves\n    }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins,\n      leaves = _ref2.leaves;\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    // Cancels any previous scheduleTimeout and schedules callback\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this13 = this;\n      clearTimeout(this.timer);\n      this.timer = setTimeout(function () {\n        _this13.tries = _this13.tries + 1;\n        _this13.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n  return Timer;\n}();","map":{"version":3,"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","VSN","SOCKET_STATES","connecting","open","closing","closed","DEFAULT_TIMEOUT","CHANNEL_STATES","errored","joined","joining","leaving","CHANNEL_EVENTS","close","error","join","reply","leave","TRANSPORTS","longpoll","websocket","Push","channel","event","payload","timeout","receivedResp","timeoutTimer","recHooks","sent","resend","cancelRefEvent","ref","refEvent","send","hasReceived","startTimeout","socket","push","topic","receive","status","callback","response","matchReceive","_ref","filter","h","forEach","off","cancelTimeout","clearTimeout","_this","makeRef","replyEventName","on","setTimeout","trigger","Channel","params","_this2","state","bindings","joinedOnce","joinPush","pushBuffer","rejoinTimer","Timer","rejoinUntilConnected","reconnectAfterMs","reset","pushEvent","onClose","log","joinRef","remove","onError","reason","isLeaving","isClosed","scheduleTimeout","isJoining","isConnected","rejoin","arguments","undefined","bind","canPush","isJoined","_this3","leavePush","onMessage","isMember","sendJoin","indexOf","handledPayload","map","isErrored","Socket","endPoint","_this4","opts","stateChangeCallbacks","message","channels","sendBuffer","transport","window","WebSocket","LongPoll","heartbeatIntervalMs","tries","logger","longpollerTimeout","reconnectTimer","disconnect","connect","protocol","location","match","endPointURL","uri","Ajax","appendParams","vsn","charAt","host","code","conn","onclose","_this5","console","onopen","onConnOpen","onerror","onConnError","onmessage","onConnMessage","onConnClose","kind","msg","data","onOpen","_this6","flushSendBuffer","skipHeartbeat","clearInterval","heartbeatTimer","setInterval","sendHeartbeat","triggerChanError","connectionState","readyState","c","chanParams","chan","_this7","JSON","stringify","newRef","toString","rawMessage","parse","token","pollEndpoint","normalizeEndpoint","poll","replace","RegExp","endpointURL","closeAndRetry","ontimeout","_this8","request","resp","messages","body","_this9","method","accept","XDomainRequest","req","xdomainRequest","_req","XMLHttpRequest","ActiveXObject","xhrRequest","_this10","onload","parseJSON","responseText","onprogress","_this11","setRequestHeader","onreadystatechange","states","complete","serialize","parentKey","queryStr","hasOwnProperty","paramKey","paramVal","encodeURIComponent","url","keys","prefix","Presence","syncState","currentState","newState","onJoin","onLeave","_this12","clone","joins","leaves","presence","newPresence","currentPresence","newRefs","metas","m","phx_ref","curRefs","joinedMetas","leftMetas","syncDiff","_ref2","_state$key$metas","unshift","apply","leftPresence","refsToRemove","p","list","presences","chooser","pres","func","getOwnPropertyNames","timerCalc","timer","_this13"],"sources":["C:/Users/akong/OneDrive/Escritorio/S/Elixir/taxi24/taxi_fe/node_modules/phoenix-socket/dist/socket.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are multiplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"room:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n// ## Duplicate Join Subscriptions\n//\n// While the client may join any number of topics on any number of channels,\n// the client may only hold a single subscription for each unique topic at any\n// given time. When attempting to create a duplicate subscription,\n// the server will close the existing channel, log a warning, and\n// spawn a new channel for the topic. The client will have their\n// `channel.onClose` callbacks fired for the existing channel, and the new\n// channel join will have its receive hooks processed as normal.\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attempted\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n//\n// ## Presence\n//\n// The `Presence` object provides features for syncing presence information\n// from the server with the client and handling presences joining and leaving.\n//\n// ### Syncing initial state from the server\n//\n// `Presence.syncState` is used to sync the list of presences on the server\n// with the client's state. An optional `onJoin` and `onLeave` callback can\n// be provided to react to changes in the client's local presences across\n// disconnects and reconnects with the server.\n//\n// `Presence.syncDiff` is used to sync a diff of presence join and leave\n// events from the server, as they happen. Like `syncState`, `syncDiff`\n// accepts optional `onJoin` and `onLeave` callbacks to react to a user\n// joining or leaving from a device.\n//\n// ### Listing Presences\n//\n// `Presence.list` is used to return a list of presence information\n// based on the local state of metadata. By default, all presence\n// metadata is returned, but a `listBy` function can be supplied to\n// allow the client to select which metadata to use for a given presence.\n// For example, you may have a user online from different devices with a\n// a metadata status of \"online\", but they have set themselves to \"away\"\n// on another device. In this case, they app may choose to use the \"away\"\n// status for what appears on the UI. The example below defines a `listBy`\n// function which prioritizes the first metadata which was registered for\n// each user. This could be the first tab they opened, or the first device\n// they came online from:\n//\n//     let state = {}\n//     state = Presence.syncState(state, stateFromServer)\n//     let listBy = (id, {metas: [first, ...rest]}) => {\n//       first.count = rest.length + 1 // count of this user's presences\n//       first.id = id\n//       return first\n//     }\n//     let onlineUsers = Presence.list(state, listBy)\n//\n//\n// ### Example Usage\n//\n//     // detect if user has joined for the 1st time or from another tab/device\n//     let onJoin = (id, current, newPres) => {\n//       if(!current){\n//         console.log(\"user has entered for the first time\", newPres)\n//       } else {\n//         console.log(\"user additional presence\", newPres)\n//       }\n//     }\n//     // detect if user has left from all tabs/devices, or is still present\n//     let onLeave = (id, current, leftPres) => {\n//       if(current.metas.length === 0){\n//         console.log(\"user has left from all devices\", leftPres)\n//       } else {\n//         console.log(\"user left from a device\", leftPres)\n//       }\n//     }\n//     let presences = {} // client's initial empty presence state\n//     // receive initial presence data from server, sent after join\n//     myChannel.on(\"presences\", state => {\n//       presences = Presence.syncState(presences, state, onJoin, onLeave)\n//       displayUsers(Presence.list(presences))\n//     })\n//     // receive \"presence_diff\" from server, containing join/leave events\n//     myChannel.on(\"presence_diff\", diff => {\n//       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n//       this.setState({users: Presence.list(room.presences, listBy)})\n//     })\n//\nvar VSN = \"1.0.0\";\nvar SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };\nvar DEFAULT_TIMEOUT = 10000;\nvar CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\"\n};\nvar CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n};\nvar TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n};\n\nvar Push = function () {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n  function Push(channel, event, payload, timeout) {\n    _classCallCheck(this, Push);\n\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload || {};\n    this.receivedResp = null;\n    this.timeout = timeout;\n    this.timeoutTimer = null;\n    this.recHooks = [];\n    this.sent = false;\n  }\n\n  _createClass(Push, [{\n    key: \"resend\",\n    value: function resend(timeout) {\n      this.timeout = timeout;\n      this.cancelRefEvent();\n      this.ref = null;\n      this.refEvent = null;\n      this.receivedResp = null;\n      this.sent = false;\n      this.send();\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      if (this.hasReceived(\"timeout\")) {\n        return;\n      }\n      this.startTimeout();\n      this.sent = true;\n      this.channel.socket.push({\n        topic: this.channel.topic,\n        event: this.event,\n        payload: this.payload,\n        ref: this.ref\n      });\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(status, callback) {\n      if (this.hasReceived(status)) {\n        callback(this.receivedResp.response);\n      }\n\n      this.recHooks.push({ status: status, callback: callback });\n      return this;\n    }\n\n    // private\n\n  }, {\n    key: \"matchReceive\",\n    value: function matchReceive(_ref) {\n      var status = _ref.status,\n          response = _ref.response,\n          ref = _ref.ref;\n\n      this.recHooks.filter(function (h) {\n        return h.status === status;\n      }).forEach(function (h) {\n        return h.callback(response);\n      });\n    }\n  }, {\n    key: \"cancelRefEvent\",\n    value: function cancelRefEvent() {\n      if (!this.refEvent) {\n        return;\n      }\n      this.channel.off(this.refEvent);\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      clearTimeout(this.timeoutTimer);\n      this.timeoutTimer = null;\n    }\n  }, {\n    key: \"startTimeout\",\n    value: function startTimeout() {\n      var _this = this;\n\n      if (this.timeoutTimer) {\n        return;\n      }\n      this.ref = this.channel.socket.makeRef();\n      this.refEvent = this.channel.replyEventName(this.ref);\n\n      this.channel.on(this.refEvent, function (payload) {\n        _this.cancelRefEvent();\n        _this.cancelTimeout();\n        _this.receivedResp = payload;\n        _this.matchReceive(payload);\n      });\n\n      this.timeoutTimer = setTimeout(function () {\n        _this.trigger(\"timeout\", {});\n      }, this.timeout);\n    }\n  }, {\n    key: \"hasReceived\",\n    value: function hasReceived(status) {\n      return this.receivedResp && this.receivedResp.status === status;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(status, response) {\n      this.channel.trigger(this.refEvent, { status: status, response: response });\n    }\n  }]);\n\n  return Push;\n}();\n\nvar Channel = exports.Channel = function () {\n  function Channel(topic, params, socket) {\n    var _this2 = this;\n\n    _classCallCheck(this, Channel);\n\n    this.state = CHANNEL_STATES.closed;\n    this.topic = topic;\n    this.params = params || {};\n    this.socket = socket;\n    this.bindings = [];\n    this.timeout = this.socket.timeout;\n    this.joinedOnce = false;\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n    this.pushBuffer = [];\n    this.rejoinTimer = new Timer(function () {\n      return _this2.rejoinUntilConnected();\n    }, this.socket.reconnectAfterMs);\n    this.joinPush.receive(\"ok\", function () {\n      _this2.state = CHANNEL_STATES.joined;\n      _this2.rejoinTimer.reset();\n      _this2.pushBuffer.forEach(function (pushEvent) {\n        return pushEvent.send();\n      });\n      _this2.pushBuffer = [];\n    });\n    this.onClose(function () {\n      _this2.rejoinTimer.reset();\n      _this2.socket.log(\"channel\", \"close \" + _this2.topic + \" \" + _this2.joinRef());\n      _this2.state = CHANNEL_STATES.closed;\n      _this2.socket.remove(_this2);\n    });\n    this.onError(function (reason) {\n      if (_this2.isLeaving() || _this2.isClosed()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"error \" + _this2.topic, reason);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.joinPush.receive(\"timeout\", function () {\n      if (!_this2.isJoining()) {\n        return;\n      }\n      _this2.socket.log(\"channel\", \"timeout \" + _this2.topic, _this2.joinPush.timeout);\n      _this2.state = CHANNEL_STATES.errored;\n      _this2.rejoinTimer.scheduleTimeout();\n    });\n    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {\n      _this2.trigger(_this2.replyEventName(ref), payload);\n    });\n  }\n\n  _createClass(Channel, [{\n    key: \"rejoinUntilConnected\",\n    value: function rejoinUntilConnected() {\n      this.rejoinTimer.scheduleTimeout();\n      if (this.socket.isConnected()) {\n        this.rejoin();\n      }\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      if (this.joinedOnce) {\n        throw \"tried to join multiple times. 'join' can only be called a single time per channel instance\";\n      } else {\n        this.joinedOnce = true;\n        this.rejoin(timeout);\n        return this.joinPush;\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.on(CHANNEL_EVENTS.close, callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.on(CHANNEL_EVENTS.error, function (reason) {\n        return callback(reason);\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.bindings.push({ event: event, callback: callback });\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this.bindings = this.bindings.filter(function (bind) {\n        return bind.event !== event;\n      });\n    }\n  }, {\n    key: \"canPush\",\n    value: function canPush() {\n      return this.socket.isConnected() && this.isJoined();\n    }\n  }, {\n    key: \"push\",\n    value: function push(event, payload) {\n      var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.timeout;\n\n      if (!this.joinedOnce) {\n        throw \"tried to push '\" + event + \"' to '\" + this.topic + \"' before joining. Use channel.join() before pushing events\";\n      }\n      var pushEvent = new Push(this, event, payload, timeout);\n      if (this.canPush()) {\n        pushEvent.send();\n      } else {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n      }\n\n      return pushEvent;\n    }\n\n    // Leaves the channel\n    //\n    // Unsubscribes from server events, and\n    // instructs channel to terminate on server\n    //\n    // Triggers onClose() hooks\n    //\n    // To receive leave acknowledgements, use the a `receive`\n    // hook to bind to the server ack, ie:\n    //\n    //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n    //\n\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      var _this3 = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n\n      this.state = CHANNEL_STATES.leaving;\n      var onClose = function onClose() {\n        _this3.socket.log(\"channel\", \"leave \" + _this3.topic);\n        _this3.trigger(CHANNEL_EVENTS.close, \"leave\", _this3.joinRef());\n      };\n      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n      leavePush.receive(\"ok\", function () {\n        return onClose();\n      }).receive(\"timeout\", function () {\n        return onClose();\n      });\n      leavePush.send();\n      if (!this.canPush()) {\n        leavePush.trigger(\"ok\", {});\n      }\n\n      return leavePush;\n    }\n\n    // Overridable message hook\n    //\n    // Receives all events for specialized message handling\n    // before dispatching to the channel callbacks.\n    //\n    // Must return the payload, modified or unmodified\n\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(event, payload, ref) {\n      return payload;\n    }\n\n    // private\n\n  }, {\n    key: \"isMember\",\n    value: function isMember(topic) {\n      return this.topic === topic;\n    }\n  }, {\n    key: \"joinRef\",\n    value: function joinRef() {\n      return this.joinPush.ref;\n    }\n  }, {\n    key: \"sendJoin\",\n    value: function sendJoin(timeout) {\n      this.state = CHANNEL_STATES.joining;\n      this.joinPush.resend(timeout);\n    }\n  }, {\n    key: \"rejoin\",\n    value: function rejoin() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      if (this.isLeaving()) {\n        return;\n      }\n      this.sendJoin(timeout);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(event, payload, ref) {\n      var close = CHANNEL_EVENTS.close,\n          error = CHANNEL_EVENTS.error,\n          leave = CHANNEL_EVENTS.leave,\n          join = CHANNEL_EVENTS.join;\n\n      if (ref && [close, error, leave, join].indexOf(event) >= 0 && ref !== this.joinRef()) {\n        return;\n      }\n      var handledPayload = this.onMessage(event, payload, ref);\n      if (payload && !handledPayload) {\n        throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n      }\n\n      this.bindings.filter(function (bind) {\n        return bind.event === event;\n      }).map(function (bind) {\n        return bind.callback(handledPayload, ref);\n      });\n    }\n  }, {\n    key: \"replyEventName\",\n    value: function replyEventName(ref) {\n      return \"chan_reply_\" + ref;\n    }\n  }, {\n    key: \"isClosed\",\n    value: function isClosed() {\n      return this.state === CHANNEL_STATES.closed;\n    }\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return this.state === CHANNEL_STATES.errored;\n    }\n  }, {\n    key: \"isJoined\",\n    value: function isJoined() {\n      return this.state === CHANNEL_STATES.joined;\n    }\n  }, {\n    key: \"isJoining\",\n    value: function isJoining() {\n      return this.state === CHANNEL_STATES.joining;\n    }\n  }, {\n    key: \"isLeaving\",\n    value: function isLeaving() {\n      return this.state === CHANNEL_STATES.leaving;\n    }\n  }]);\n\n  return Channel;\n}();\n\nvar Socket = exports.Socket = function () {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n  function Socket(endPoint) {\n    var _this4 = this;\n\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Socket);\n\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };\n    this.channels = [];\n    this.sendBuffer = [];\n    this.ref = 0;\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT;\n    this.transport = opts.transport || window.WebSocket || LongPoll;\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;\n    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n    };\n    this.logger = opts.logger || function () {}; // noop\n    this.longpollerTimeout = opts.longpollerTimeout || 20000;\n    this.params = opts.params || {};\n    this.endPoint = endPoint + \"/\" + TRANSPORTS.websocket;\n    this.reconnectTimer = new Timer(function () {\n      _this4.disconnect(function () {\n        return _this4.connect();\n      });\n    }, this.reconnectAfterMs);\n  }\n\n  _createClass(Socket, [{\n    key: \"protocol\",\n    value: function protocol() {\n      return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n    }\n  }, {\n    key: \"endPointURL\",\n    value: function endPointURL() {\n      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });\n      if (uri.charAt(0) !== \"/\") {\n        return uri;\n      }\n      if (uri.charAt(1) === \"/\") {\n        return this.protocol() + \":\" + uri;\n      }\n\n      return this.protocol() + \"://\" + location.host + uri;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect(callback, code, reason) {\n      if (this.conn) {\n        this.conn.onclose = function () {}; // noop\n        if (code) {\n          this.conn.close(code, reason || \"\");\n        } else {\n          this.conn.close();\n        }\n        this.conn = null;\n      }\n      callback && callback();\n    }\n\n    // params - The params to send when connecting, for example `{user_id: userToken}`\n\n  }, {\n    key: \"connect\",\n    value: function connect(params) {\n      var _this5 = this;\n\n      if (params) {\n        console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\");\n        this.params = params;\n      }\n      if (this.conn) {\n        return;\n      }\n\n      this.conn = new this.transport(this.endPointURL());\n      this.conn.timeout = this.longpollerTimeout;\n      this.conn.onopen = function () {\n        return _this5.onConnOpen();\n      };\n      this.conn.onerror = function (error) {\n        return _this5.onConnError(error);\n      };\n      this.conn.onmessage = function (event) {\n        return _this5.onConnMessage(event);\n      };\n      this.conn.onclose = function (event) {\n        return _this5.onConnClose(event);\n      };\n    }\n\n    // Logs the message. Override `this.logger` for specialized logging. noops by default\n\n  }, {\n    key: \"log\",\n    value: function log(kind, msg, data) {\n      this.logger(kind, msg, data);\n    }\n\n    // Registers callbacks for connection state change events\n    //\n    // Examples\n    //\n    //    socket.onError(function(error){ alert(\"An error occurred\") })\n    //\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(callback) {\n      this.stateChangeCallbacks.open.push(callback);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(callback) {\n      this.stateChangeCallbacks.close.push(callback);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(callback) {\n      this.stateChangeCallbacks.error.push(callback);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(callback) {\n      this.stateChangeCallbacks.message.push(callback);\n    }\n  }, {\n    key: \"onConnOpen\",\n    value: function onConnOpen() {\n      var _this6 = this;\n\n      this.log(\"transport\", \"connected to \" + this.endPointURL(), this.transport.prototype);\n      this.flushSendBuffer();\n      this.reconnectTimer.reset();\n      if (!this.conn.skipHeartbeat) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(function () {\n          return _this6.sendHeartbeat();\n        }, this.heartbeatIntervalMs);\n      }\n      this.stateChangeCallbacks.open.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"onConnClose\",\n    value: function onConnClose(event) {\n      this.log(\"transport\", \"close\", event);\n      this.triggerChanError();\n      clearInterval(this.heartbeatTimer);\n      this.reconnectTimer.scheduleTimeout();\n      this.stateChangeCallbacks.close.forEach(function (callback) {\n        return callback(event);\n      });\n    }\n  }, {\n    key: \"onConnError\",\n    value: function onConnError(error) {\n      this.log(\"transport\", error);\n      this.triggerChanError();\n      this.stateChangeCallbacks.error.forEach(function (callback) {\n        return callback(error);\n      });\n    }\n  }, {\n    key: \"triggerChanError\",\n    value: function triggerChanError() {\n      this.channels.forEach(function (channel) {\n        return channel.trigger(CHANNEL_EVENTS.error);\n      });\n    }\n  }, {\n    key: \"connectionState\",\n    value: function connectionState() {\n      switch (this.conn && this.conn.readyState) {\n        case SOCKET_STATES.connecting:\n          return \"connecting\";\n        case SOCKET_STATES.open:\n          return \"open\";\n        case SOCKET_STATES.closing:\n          return \"closing\";\n        default:\n          return \"closed\";\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this.connectionState() === \"open\";\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(channel) {\n      this.channels = this.channels.filter(function (c) {\n        return c.joinRef() !== channel.joinRef();\n      });\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(topic) {\n      var chanParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var chan = new Channel(topic, chanParams, this);\n      this.channels.push(chan);\n      return chan;\n    }\n  }, {\n    key: \"push\",\n    value: function push(data) {\n      var _this7 = this;\n\n      var topic = data.topic,\n          event = data.event,\n          payload = data.payload,\n          ref = data.ref;\n\n      var callback = function callback() {\n        return _this7.conn.send(JSON.stringify(data));\n      };\n      this.log(\"push\", topic + \" \" + event + \" (\" + ref + \")\", payload);\n      if (this.isConnected()) {\n        callback();\n      } else {\n        this.sendBuffer.push(callback);\n      }\n    }\n\n    // Return the next message ref, accounting for overflows\n\n  }, {\n    key: \"makeRef\",\n    value: function makeRef() {\n      var newRef = this.ref + 1;\n      if (newRef === this.ref) {\n        this.ref = 0;\n      } else {\n        this.ref = newRef;\n      }\n\n      return this.ref.toString();\n    }\n  }, {\n    key: \"sendHeartbeat\",\n    value: function sendHeartbeat() {\n      if (!this.isConnected()) {\n        return;\n      }\n      this.push({ topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef() });\n    }\n  }, {\n    key: \"flushSendBuffer\",\n    value: function flushSendBuffer() {\n      if (this.isConnected() && this.sendBuffer.length > 0) {\n        this.sendBuffer.forEach(function (callback) {\n          return callback();\n        });\n        this.sendBuffer = [];\n      }\n    }\n  }, {\n    key: \"onConnMessage\",\n    value: function onConnMessage(rawMessage) {\n      var msg = JSON.parse(rawMessage.data);\n      var topic = msg.topic,\n          event = msg.event,\n          payload = msg.payload,\n          ref = msg.ref;\n\n      this.log(\"receive\", (payload.status || \"\") + \" \" + topic + \" \" + event + \" \" + (ref && \"(\" + ref + \")\" || \"\"), payload);\n      this.channels.filter(function (channel) {\n        return channel.isMember(topic);\n      }).forEach(function (channel) {\n        return channel.trigger(event, payload, ref);\n      });\n      this.stateChangeCallbacks.message.forEach(function (callback) {\n        return callback(msg);\n      });\n    }\n  }]);\n\n  return Socket;\n}();\n\nvar LongPoll = exports.LongPoll = function () {\n  function LongPoll(endPoint) {\n    _classCallCheck(this, LongPoll);\n\n    this.endPoint = null;\n    this.token = null;\n    this.skipHeartbeat = true;\n    this.onopen = function () {}; // noop\n    this.onerror = function () {}; // noop\n    this.onmessage = function () {}; // noop\n    this.onclose = function () {}; // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint);\n    this.readyState = SOCKET_STATES.connecting;\n\n    this.poll();\n  }\n\n  _createClass(LongPoll, [{\n    key: \"normalizeEndpoint\",\n    value: function normalizeEndpoint(endPoint) {\n      return endPoint.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll);\n    }\n  }, {\n    key: \"endpointURL\",\n    value: function endpointURL() {\n      return Ajax.appendParams(this.pollEndpoint, { token: this.token });\n    }\n  }, {\n    key: \"closeAndRetry\",\n    value: function closeAndRetry() {\n      this.close();\n      this.readyState = SOCKET_STATES.connecting;\n    }\n  }, {\n    key: \"ontimeout\",\n    value: function ontimeout() {\n      this.onerror(\"timeout\");\n      this.closeAndRetry();\n    }\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      var _this8 = this;\n\n      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {\n        return;\n      }\n\n      Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (resp) {\n        if (resp) {\n          var status = resp.status,\n              token = resp.token,\n              messages = resp.messages;\n\n          _this8.token = token;\n        } else {\n          var status = 0;\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach(function (msg) {\n              return _this8.onmessage({ data: JSON.stringify(msg) });\n            });\n            _this8.poll();\n            break;\n          case 204:\n            _this8.poll();\n            break;\n          case 410:\n            _this8.readyState = SOCKET_STATES.open;\n            _this8.onopen();\n            _this8.poll();\n            break;\n          case 0:\n          case 500:\n            _this8.onerror();\n            _this8.closeAndRetry();\n            break;\n          default:\n            throw \"unhandled poll status \" + status;\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this9 = this;\n\n      Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), function (resp) {\n        if (!resp || resp.status !== 200) {\n          _this9.onerror(status);\n          _this9.closeAndRetry();\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.readyState = SOCKET_STATES.closed;\n      this.onclose();\n    }\n  }]);\n\n  return LongPoll;\n}();\n\nvar Ajax = exports.Ajax = function () {\n  function Ajax() {\n    _classCallCheck(this, Ajax);\n  }\n\n  _createClass(Ajax, null, [{\n    key: \"request\",\n    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {\n      if (window.XDomainRequest) {\n        var req = new XDomainRequest(); // IE8, IE9\n        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);\n      } else {\n        var _req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n        new ActiveXObject(\"Microsoft.XMLHTTP\"); // IE6, IE5\n        this.xhrRequest(_req, method, endPoint, accept, body, timeout, ontimeout, callback);\n      }\n    }\n  }, {\n    key: \"xdomainRequest\",\n    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n      var _this10 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint);\n      req.onload = function () {\n        var response = _this10.parseJSON(req.responseText);\n        callback && callback(response);\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      // Work around bug in IE9 that requires an attached onprogress handler\n      req.onprogress = function () {};\n\n      req.send(body);\n    }\n  }, {\n    key: \"xhrRequest\",\n    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {\n      var _this11 = this;\n\n      req.timeout = timeout;\n      req.open(method, endPoint, true);\n      req.setRequestHeader(\"Content-Type\", accept);\n      req.onerror = function () {\n        callback && callback(null);\n      };\n      req.onreadystatechange = function () {\n        if (req.readyState === _this11.states.complete && callback) {\n          var response = _this11.parseJSON(req.responseText);\n          callback(response);\n        }\n      };\n      if (ontimeout) {\n        req.ontimeout = ontimeout;\n      }\n\n      req.send(body);\n    }\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(resp) {\n      return resp && resp !== \"\" ? JSON.parse(resp) : null;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(obj, parentKey) {\n      var queryStr = [];\n      for (var key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n          continue;\n        }\n        var paramKey = parentKey ? parentKey + \"[\" + key + \"]\" : key;\n        var paramVal = obj[key];\n        if ((typeof paramVal === \"undefined\" ? \"undefined\" : _typeof(paramVal)) === \"object\") {\n          queryStr.push(this.serialize(paramVal, paramKey));\n        } else {\n          queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal));\n        }\n      }\n      return queryStr.join(\"&\");\n    }\n  }, {\n    key: \"appendParams\",\n    value: function appendParams(url, params) {\n      if (Object.keys(params).length === 0) {\n        return url;\n      }\n\n      var prefix = url.match(/\\?/) ? \"&\" : \"?\";\n      return \"\" + url + prefix + this.serialize(params);\n    }\n  }]);\n\n  return Ajax;\n}();\n\nAjax.states = { complete: 4 };\n\nvar Presence = exports.Presence = {\n  syncState: function syncState(currentState, newState, onJoin, onLeave) {\n    var _this12 = this;\n\n    var state = this.clone(currentState);\n    var joins = {};\n    var leaves = {};\n\n    this.map(state, function (key, presence) {\n      if (!newState[key]) {\n        leaves[key] = presence;\n      }\n    });\n    this.map(newState, function (key, newPresence) {\n      var currentPresence = state[key];\n      if (currentPresence) {\n        var newRefs = newPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var curRefs = currentPresence.metas.map(function (m) {\n          return m.phx_ref;\n        });\n        var joinedMetas = newPresence.metas.filter(function (m) {\n          return curRefs.indexOf(m.phx_ref) < 0;\n        });\n        var leftMetas = currentPresence.metas.filter(function (m) {\n          return newRefs.indexOf(m.phx_ref) < 0;\n        });\n        if (joinedMetas.length > 0) {\n          joins[key] = newPresence;\n          joins[key].metas = joinedMetas;\n        }\n        if (leftMetas.length > 0) {\n          leaves[key] = _this12.clone(currentPresence);\n          leaves[key].metas = leftMetas;\n        }\n      } else {\n        joins[key] = newPresence;\n      }\n    });\n    return this.syncDiff(state, { joins: joins, leaves: leaves }, onJoin, onLeave);\n  },\n  syncDiff: function syncDiff(currentState, _ref2, onJoin, onLeave) {\n    var joins = _ref2.joins,\n        leaves = _ref2.leaves;\n\n    var state = this.clone(currentState);\n    if (!onJoin) {\n      onJoin = function onJoin() {};\n    }\n    if (!onLeave) {\n      onLeave = function onLeave() {};\n    }\n\n    this.map(joins, function (key, newPresence) {\n      var currentPresence = state[key];\n      state[key] = newPresence;\n      if (currentPresence) {\n        var _state$key$metas;\n\n        (_state$key$metas = state[key].metas).unshift.apply(_state$key$metas, _toConsumableArray(currentPresence.metas));\n      }\n      onJoin(key, currentPresence, newPresence);\n    });\n    this.map(leaves, function (key, leftPresence) {\n      var currentPresence = state[key];\n      if (!currentPresence) {\n        return;\n      }\n      var refsToRemove = leftPresence.metas.map(function (m) {\n        return m.phx_ref;\n      });\n      currentPresence.metas = currentPresence.metas.filter(function (p) {\n        return refsToRemove.indexOf(p.phx_ref) < 0;\n      });\n      onLeave(key, currentPresence, leftPresence);\n      if (currentPresence.metas.length === 0) {\n        delete state[key];\n      }\n    });\n    return state;\n  },\n  list: function list(presences, chooser) {\n    if (!chooser) {\n      chooser = function chooser(key, pres) {\n        return pres;\n      };\n    }\n\n    return this.map(presences, function (key, presence) {\n      return chooser(key, presence);\n    });\n  },\n\n\n  // private\n\n  map: function map(obj, func) {\n    return Object.getOwnPropertyNames(obj).map(function (key) {\n      return func(key, obj[key]);\n    });\n  },\n  clone: function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n};\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\n\nvar Timer = function () {\n  function Timer(callback, timerCalc) {\n    _classCallCheck(this, Timer);\n\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = null;\n    this.tries = 0;\n  }\n\n  _createClass(Timer, [{\n    key: \"reset\",\n    value: function reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n    }\n\n    // Cancels any previous scheduleTimeout and schedules callback\n\n  }, {\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var _this13 = this;\n\n      clearTimeout(this.timer);\n\n      this.timer = setTimeout(function () {\n        _this13.tries = _this13.tries + 1;\n        _this13.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }]);\n\n  return Timer;\n}();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}